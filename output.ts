// Row 0
// Row 1
{ position: new Vector3(brickOffsetX + brickSize * 4, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 0), color: Color3.FromInts(251, 171, 2) },
{ position: new Vector3(brickOffsetX + brickSize * 29, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 0), color: Color3.FromInts(251, 171, 2) },
// Row 2
{ position: new Vector3(brickOffsetX + brickSize * 3, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 1), color: Color3.FromInts(248, 110, 3) },
{ position: new Vector3(brickOffsetX + brickSize * 4, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 1), color: Color3.FromInts(249, 130, 3) },
{ position: new Vector3(brickOffsetX + brickSize * 29, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 1), color: Color3.FromInts(249, 130, 3) },
{ position: new Vector3(brickOffsetX + brickSize * 30, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 1), color: Color3.FromInts(248, 110, 3) },
// Row 3
{ position: new Vector3(brickOffsetX + brickSize * 2, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 2), color: Color3.FromInts(245, 63, 5) },
{ position: new Vector3(brickOffsetX + brickSize * 3, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 2), color: Color3.FromInts(246, 77, 4) },
{ position: new Vector3(brickOffsetX + brickSize * 4, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 2), color: Color3.FromInts(247, 94, 4) },
{ position: new Vector3(brickOffsetX + brickSize * 29, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 2), color: Color3.FromInts(247, 95, 4) },
{ position: new Vector3(brickOffsetX + brickSize * 30, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 2), color: Color3.FromInts(246, 78, 4) },
{ position: new Vector3(brickOffsetX + brickSize * 31, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 2), color: Color3.FromInts(245, 63, 5) },
// Row 4
{ position: new Vector3(brickOffsetX + brickSize * 2, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 3), color: Color3.FromInts(160, 21, 25) },
{ position: new Vector3(brickOffsetX + brickSize * 3, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 3), color: Color3.FromInts(154, 21, 24) },
{ position: new Vector3(brickOffsetX + brickSize * 4, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 3), color: Color3.FromInts(148, 20, 23) },
{ position: new Vector3(brickOffsetX + brickSize * 29, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 3), color: Color3.FromInts(147, 20, 23) },
{ position: new Vector3(brickOffsetX + brickSize * 30, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 3), color: Color3.FromInts(153, 21, 24) },
{ position: new Vector3(brickOffsetX + brickSize * 31, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 3), color: Color3.FromInts(160, 21, 25) },
// Row 5
{ position: new Vector3(brickOffsetX + brickSize * 1, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 4), color: Color3.FromInts(243, 16, 6) },
{ position: new Vector3(brickOffsetX + brickSize * 2, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 4), color: Color3.FromInts(149, 21, 24) },
{ position: new Vector3(brickOffsetX + brickSize * 3, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 4), color: Color3.FromInts(143, 20, 23) },
{ position: new Vector3(brickOffsetX + brickSize * 4, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 4), color: Color3.FromInts(244, 41, 5) },
{ position: new Vector3(brickOffsetX + brickSize * 5, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 4), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 28, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 4), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 29, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 4), color: Color3.FromInts(244, 41, 5) },
{ position: new Vector3(brickOffsetX + brickSize * 30, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 4), color: Color3.FromInts(143, 20, 23) },
{ position: new Vector3(brickOffsetX + brickSize * 31, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 4), color: Color3.FromInts(149, 21, 24) },
{ position: new Vector3(brickOffsetX + brickSize * 32, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 4), color: Color3.FromInts(243, 16, 6) },
// Row 6
{ position: new Vector3(brickOffsetX + brickSize * 1, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 5), color: Color3.FromInts(242, 7, 6) },
{ position: new Vector3(brickOffsetX + brickSize * 2, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 5), color: Color3.FromInts(139, 20, 22) },
{ position: new Vector3(brickOffsetX + brickSize * 3, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 5), color: Color3.FromInts(133, 19, 22) },
{ position: new Vector3(brickOffsetX + brickSize * 4, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 5), color: Color3.FromInts(127, 19, 21) },
{ position: new Vector3(brickOffsetX + brickSize * 5, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 5), color: Color3.FromInts(121, 19, 20) },
{ position: new Vector3(brickOffsetX + brickSize * 6, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 5), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 27, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 5), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 28, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 5), color: Color3.FromInts(121, 19, 20) },
{ position: new Vector3(brickOffsetX + brickSize * 29, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 5), color: Color3.FromInts(127, 19, 21) },
{ position: new Vector3(brickOffsetX + brickSize * 30, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 5), color: Color3.FromInts(133, 19, 22) },
{ position: new Vector3(brickOffsetX + brickSize * 31, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 5), color: Color3.FromInts(139, 20, 22) },
{ position: new Vector3(brickOffsetX + brickSize * 32, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 5), color: Color3.FromInts(0, 0, 0) },
// Row 7
{ position: new Vector3(brickOffsetX + brickSize * 1, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(242, 5, 6) },
{ position: new Vector3(brickOffsetX + brickSize * 2, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(129, 19, 21) },
{ position: new Vector3(brickOffsetX + brickSize * 3, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(123, 19, 21) },
{ position: new Vector3(brickOffsetX + brickSize * 4, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(117, 18, 20) },
{ position: new Vector3(brickOffsetX + brickSize * 5, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(111, 18, 19) },
{ position: new Vector3(brickOffsetX + brickSize * 6, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(106, 18, 19) },
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(101, 17, 18) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(255, 54, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(255, 84, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(255, 60, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 12, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(255, 3, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 13, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 21, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(255, 3, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(255, 59, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(255, 87, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(255, 53, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(100, 17, 18) },
{ position: new Vector3(brickOffsetX + brickSize * 27, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(106, 18, 19) },
{ position: new Vector3(brickOffsetX + brickSize * 28, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(111, 18, 19) },
{ position: new Vector3(brickOffsetX + brickSize * 29, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(117, 18, 20) },
{ position: new Vector3(brickOffsetX + brickSize * 30, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(122, 19, 21) },
{ position: new Vector3(brickOffsetX + brickSize * 31, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(128, 19, 21) },
{ position: new Vector3(brickOffsetX + brickSize * 32, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 6), color: Color3.FromInts(0, 0, 0) },
// Row 8
{ position: new Vector3(brickOffsetX + brickSize * 2, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(119, 18, 20) },
{ position: new Vector3(brickOffsetX + brickSize * 3, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(113, 18, 20) },
{ position: new Vector3(brickOffsetX + brickSize * 4, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(108, 18, 19) },
{ position: new Vector3(brickOffsetX + brickSize * 5, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(102, 17, 18) },
{ position: new Vector3(brickOffsetX + brickSize * 6, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(97, 17, 18) },
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(92, 17, 17) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(255, 70, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(212, 11, 13) },
{ position: new Vector3(brickOffsetX + brickSize * 12, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(167, 23, 27) },
{ position: new Vector3(brickOffsetX + brickSize * 13, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(255, 87, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 20, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(255, 87, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 21, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(187, 18, 21) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(249, 1, 1) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(255, 78, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(92, 17, 17) },
{ position: new Vector3(brickOffsetX + brickSize * 27, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(97, 17, 18) },
{ position: new Vector3(brickOffsetX + brickSize * 28, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(102, 17, 18) },
{ position: new Vector3(brickOffsetX + brickSize * 29, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(107, 18, 19) },
{ position: new Vector3(brickOffsetX + brickSize * 30, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(113, 18, 19) },
{ position: new Vector3(brickOffsetX + brickSize * 31, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 7), color: Color3.FromInts(118, 18, 20) },
// Row 9
{ position: new Vector3(brickOffsetX + brickSize * 2, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 3, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(104, 17, 18) },
{ position: new Vector3(brickOffsetX + brickSize * 4, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(98, 17, 18) },
{ position: new Vector3(brickOffsetX + brickSize * 5, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(93, 17, 17) },
{ position: new Vector3(brickOffsetX + brickSize * 6, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(89, 16, 17) },
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(84, 16, 16) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(255, 100, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 12, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 13, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 14, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(255, 74, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 15, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 16, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(255, 78, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 17, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(255, 78, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 18, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 19, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(255, 69, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 20, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 21, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(255, 99, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(84, 16, 16) },
{ position: new Vector3(brickOffsetX + brickSize * 27, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(89, 16, 17) },
{ position: new Vector3(brickOffsetX + brickSize * 28, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(93, 17, 17) },
{ position: new Vector3(brickOffsetX + brickSize * 29, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(98, 17, 18) },
{ position: new Vector3(brickOffsetX + brickSize * 30, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(104, 17, 18) },
{ position: new Vector3(brickOffsetX + brickSize * 31, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 8), color: Color3.FromInts(109, 18, 19) },
// Row 10
{ position: new Vector3(brickOffsetX + brickSize * 3, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 4, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(90, 17, 17) },
{ position: new Vector3(brickOffsetX + brickSize * 5, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(86, 16, 16) },
{ position: new Vector3(brickOffsetX + brickSize * 6, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(82, 16, 16) },
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(255, 82, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(255, 23, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(255, 77, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(255, 29, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 12, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 13, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 14, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 15, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 16, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(231, 23, 7) },
{ position: new Vector3(brickOffsetX + brickSize * 17, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(236, 26, 6) },
{ position: new Vector3(brickOffsetX + brickSize * 18, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 19, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 20, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 21, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(255, 25, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(255, 77, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(255, 9, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(255, 86, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 27, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(82, 16, 16) },
{ position: new Vector3(brickOffsetX + brickSize * 28, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(85, 16, 16) },
{ position: new Vector3(brickOffsetX + brickSize * 29, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(90, 17, 17) },
{ position: new Vector3(brickOffsetX + brickSize * 30, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 9), color: Color3.FromInts(0, 0, 0) },
// Row 11
{ position: new Vector3(brickOffsetX + brickSize * 2, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(209, 13, 15) },
{ position: new Vector3(brickOffsetX + brickSize * 3, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(243, 3, 4) },
{ position: new Vector3(brickOffsetX + brickSize * 5, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(82, 16, 16) },
{ position: new Vector3(brickOffsetX + brickSize * 6, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(255, 37, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(255, 83, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(158, 26, 30) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(200, 15, 17) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 12, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(185, 19, 22) },
{ position: new Vector3(brickOffsetX + brickSize * 13, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 14, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 15, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 16, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(160, 25, 29) },
{ position: new Vector3(brickOffsetX + brickSize * 17, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(160, 25, 30) },
{ position: new Vector3(brickOffsetX + brickSize * 18, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 19, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 20, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 21, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(181, 20, 23) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(197, 15, 18) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(153, 27, 32) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(255, 82, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 27, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(255, 38, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 28, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(82, 16, 16) },
{ position: new Vector3(brickOffsetX + brickSize * 30, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(244, 3, 3) },
{ position: new Vector3(brickOffsetX + brickSize * 31, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 10), color: Color3.FromInts(210, 12, 14) },
// Row 12
{ position: new Vector3(brickOffsetX + brickSize * 4, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 6, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(206, 18, 25) },
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(53, 6, 6) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(73, 13, 13) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(77, 14, 14) },
{ position: new Vector3(brickOffsetX + brickSize * 12, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(62, 9, 9) },
{ position: new Vector3(brickOffsetX + brickSize * 13, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(200, 15, 17) },
{ position: new Vector3(brickOffsetX + brickSize * 14, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 15, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 16, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(255, 159, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 17, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(255, 150, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 18, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 19, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 20, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(196, 16, 18) },
{ position: new Vector3(brickOffsetX + brickSize * 21, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(61, 9, 9) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(76, 14, 14) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(74, 13, 13) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(53, 6, 6) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(144, 29, 34) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 27, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 29, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 30, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 11), color: Color3.FromInts(0, 0, 0) },
// Row 13
{ position: new Vector3(brickOffsetX + brickSize * 4, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 5, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(255, 82, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 6, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(255, 54, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(183, 19, 22) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(64, 10, 10) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(255, 67, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(255, 169, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 12, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(255, 100, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 13, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(49, 5, 5) },
{ position: new Vector3(brickOffsetX + brickSize * 14, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(255, 146, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 15, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(255, 102, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 16, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(182, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 17, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(184, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 18, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(255, 102, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 19, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(255, 141, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 20, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(48, 4, 4) },
{ position: new Vector3(brickOffsetX + brickSize * 21, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(255, 79, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(255, 126, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(255, 38, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(65, 10, 10) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(184, 19, 22) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(255, 65, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 27, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 28, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(255, 82, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 29, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 12), color: Color3.FromInts(0, 0, 0) },
// Row 14
{ position: new Vector3(brickOffsetX + brickSize * 4, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 5, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(255, 61, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 6, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(255, 47, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(194, 16, 19) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(67, 11, 11) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(255, 121, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 12, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(255, 204, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 13, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(58, 8, 8) },
{ position: new Vector3(brickOffsetX + brickSize * 14, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(255, 68, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 15, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(123, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 16, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 17, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 18, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(121, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 19, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(255, 67, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 20, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(57, 8, 8) },
{ position: new Vector3(brickOffsetX + brickSize * 21, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(255, 199, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(255, 129, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(69, 12, 12) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(196, 16, 18) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(255, 58, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 27, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 28, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(255, 60, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 29, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 13), color: Color3.FromInts(0, 0, 0) },
// Row 15
{ position: new Vector3(brickOffsetX + brickSize * 4, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 5, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 6, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(243, 3, 4) },
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(61, 9, 9) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(255, 86, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 12, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(249, 47, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 13, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(249, 47, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 14, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(249, 47, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 15, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(249, 47, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 16, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(249, 47, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 17, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(249, 47, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 18, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(249, 47, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 19, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(249, 47, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 20, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(249, 47, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 21, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(249, 47, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(255, 100, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(63, 10, 10) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 27, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(243, 3, 4) },
{ position: new Vector3(brickOffsetX + brickSize * 28, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 29, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 14), color: Color3.FromInts(0, 0, 0) },
// Row 16
{ position: new Vector3(brickOffsetX + brickSize * 5, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(166, 24, 28) },
{ position: new Vector3(brickOffsetX + brickSize * 6, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(255, 28, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(249, 40, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(249, 40, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 12, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(249, 40, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 13, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(249, 40, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 14, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(249, 40, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 15, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(249, 40, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 16, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(249, 40, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 17, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(249, 40, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 18, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(249, 40, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 19, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(249, 40, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 20, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(249, 40, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 21, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(249, 40, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(249, 40, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(249, 40, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(48, 5, 5) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(255, 33, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 27, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 28, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(166, 24, 28) },
{ position: new Vector3(brickOffsetX + brickSize * 29, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 15), color: Color3.FromInts(0, 0, 0) },
// Row 17
{ position: new Vector3(brickOffsetX + brickSize * 5, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 6, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(201, 15, 17) },
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(255, 30, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(255, 41, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(249, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(249, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 12, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 14, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 15, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 16, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(190, 182, 160) },
{ position: new Vector3(brickOffsetX + brickSize * 17, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(186, 180, 159) },
{ position: new Vector3(brickOffsetX + brickSize * 18, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(223, 205, 174) },
{ position: new Vector3(brickOffsetX + brickSize * 19, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 21, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(249, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(249, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(255, 39, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(255, 32, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 27, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(201, 15, 17) },
{ position: new Vector3(brickOffsetX + brickSize * 28, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 16), color: Color3.FromInts(0, 0, 0) },
// Row 18
{ position: new Vector3(brickOffsetX + brickSize * 5, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 17), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 6, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 17), color: Color3.FromInts(227, 43, 9) },
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 17), color: Color3.FromInts(255, 104, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 17), color: Color3.FromInts(255, 81, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 17), color: Color3.FromInts(249, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 17), color: Color3.FromInts(249, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 17), color: Color3.FromInts(249, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 12, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 17), color: Color3.FromInts(213, 198, 170) },
{ position: new Vector3(brickOffsetX + brickSize * 14, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 17), color: Color3.FromInts(225, 207, 175) },
{ position: new Vector3(brickOffsetX + brickSize * 15, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 17), color: Color3.FromInts(245, 220, 183) },
{ position: new Vector3(brickOffsetX + brickSize * 18, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 17), color: Color3.FromInts(240, 217, 181) },
{ position: new Vector3(brickOffsetX + brickSize * 19, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 17), color: Color3.FromInts(222, 205, 174) },
{ position: new Vector3(brickOffsetX + brickSize * 21, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 17), color: Color3.FromInts(213, 198, 170) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 17), color: Color3.FromInts(249, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 17), color: Color3.FromInts(249, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 17), color: Color3.FromInts(249, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 17), color: Color3.FromInts(255, 80, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 17), color: Color3.FromInts(255, 105, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 27, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 17), color: Color3.FromInts(227, 44, 9) },
{ position: new Vector3(brickOffsetX + brickSize * 28, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 17), color: Color3.FromInts(0, 0, 0) },
// Row 19
{ position: new Vector3(brickOffsetX + brickSize * 6, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 18), color: Color3.FromInts(214, 11, 13) },
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 18), color: Color3.FromInts(255, 99, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 18), color: Color3.FromInts(255, 82, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 18), color: Color3.FromInts(243, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 18), color: Color3.FromInts(243, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 18), color: Color3.FromInts(228, 208, 176) },
{ position: new Vector3(brickOffsetX + brickSize * 12, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 18), color: Color3.FromInts(245, 220, 183) },
{ position: new Vector3(brickOffsetX + brickSize * 14, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 18), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 15, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 18), color: Color3.FromInts(220, 203, 172) },
{ position: new Vector3(brickOffsetX + brickSize * 18, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 18), color: Color3.FromInts(208, 194, 167) },
{ position: new Vector3(brickOffsetX + brickSize * 19, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 18), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 21, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 18), color: Color3.FromInts(244, 219, 182) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 18), color: Color3.FromInts(229, 209, 176) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 18), color: Color3.FromInts(242, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 18), color: Color3.FromInts(242, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 18), color: Color3.FromInts(255, 80, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 18), color: Color3.FromInts(255, 100, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 27, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 18), color: Color3.FromInts(215, 12, 12) },
// Row 20
{ position: new Vector3(brickOffsetX + brickSize * 6, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 19), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 19), color: Color3.FromInts(255, 22, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 19), color: Color3.FromInts(255, 33, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 19), color: Color3.FromInts(233, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 19), color: Color3.FromInts(233, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 12, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 19), color: Color3.FromInts(219, 202, 172) },
{ position: new Vector3(brickOffsetX + brickSize * 21, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 19), color: Color3.FromInts(218, 201, 172) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 19), color: Color3.FromInts(232, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 19), color: Color3.FromInts(232, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 19), color: Color3.FromInts(255, 32, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 19), color: Color3.FromInts(255, 24, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 27, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 19), color: Color3.FromInts(0, 0, 0) },
// Row 21
{ position: new Vector3(brickOffsetX + brickSize * 6, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 20), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 20), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 20), color: Color3.FromInts(153, 27, 32) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 20), color: Color3.FromInts(223, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 20), color: Color3.FromInts(223, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 20), color: Color3.FromInts(233, 212, 178) },
{ position: new Vector3(brickOffsetX + brickSize * 12, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 20), color: Color3.FromInts(178, 174, 155) },
{ position: new Vector3(brickOffsetX + brickSize * 21, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 20), color: Color3.FromInts(178, 174, 155) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 20), color: Color3.FromInts(231, 211, 177) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 20), color: Color3.FromInts(222, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 20), color: Color3.FromInts(222, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 20), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 20), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 27, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 20), color: Color3.FromInts(0, 0, 0) },
// Row 22
{ position: new Vector3(brickOffsetX + brickSize * 6, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 21), color: Color3.FromInts(255, 82, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 21), color: Color3.FromInts(255, 55, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 21), color: Color3.FromInts(158, 26, 31) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 21), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 21), color: Color3.FromInts(213, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 21), color: Color3.FromInts(187, 180, 159) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 21), color: Color3.FromInts(186, 180, 159) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 21), color: Color3.FromInts(212, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 21), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 21), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 21), color: Color3.FromInts(255, 55, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 27, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 21), color: Color3.FromInts(255, 82, 0) },
// Row 23
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 22), color: Color3.FromInts(255, 76, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 22), color: Color3.FromInts(163, 25, 29) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 22), color: Color3.FromInts(202, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 22), color: Color3.FromInts(202, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 22), color: Color3.FromInts(202, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 22), color: Color3.FromInts(202, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 22), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 22), color: Color3.FromInts(255, 76, 0) },
// Row 24
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 23), color: Color3.FromInts(255, 97, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 23), color: Color3.FromInts(168, 23, 27) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 23), color: Color3.FromInts(192, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 23), color: Color3.FromInts(192, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 23), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 23), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 23), color: Color3.FromInts(191, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 23), color: Color3.FromInts(191, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 23), color: Color3.FromInts(255, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 23), color: Color3.FromInts(255, 97, 0) },
// Row 25
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 24), color: Color3.FromInts(255, 111, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 24), color: Color3.FromInts(172, 22, 26) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 24), color: Color3.FromInts(233, 6, 7) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 24), color: Color3.FromInts(181, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 24), color: Color3.FromInts(181, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 12, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 24), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 21, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 24), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 24), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 24), color: Color3.FromInts(181, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 24), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 24), color: Color3.FromInts(255, 1, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 24), color: Color3.FromInts(255, 113, 0) },
// Row 26
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 25), color: Color3.FromInts(255, 99, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 25), color: Color3.FromInts(177, 21, 25) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 25), color: Color3.FromInts(237, 5, 6) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 25), color: Color3.FromInts(171, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 25), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 25), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 25), color: Color3.FromInts(170, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 25), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 25), color: Color3.FromInts(255, 3, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 25), color: Color3.FromInts(255, 100, 0) },
// Row 27
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 26), color: Color3.FromInts(255, 78, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 26), color: Color3.FromInts(182, 20, 23) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 26), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 26), color: Color3.FromInts(160, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 26), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 26), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 26), color: Color3.FromInts(159, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 26), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 26), color: Color3.FromInts(255, 8, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 26), color: Color3.FromInts(255, 79, 0) },
// Row 28
{ position: new Vector3(brickOffsetX + brickSize * 7, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 27), color: Color3.FromInts(255, 57, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 27), color: Color3.FromInts(186, 18, 22) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 27), color: Color3.FromInts(244, 3, 3) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 27), color: Color3.FromInts(149, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 27), color: Color3.FromInts(149, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 27), color: Color3.FromInts(148, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 27), color: Color3.FromInts(148, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 27), color: Color3.FromInts(222, 9, 10) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 27), color: Color3.FromInts(255, 15, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 26, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 27), color: Color3.FromInts(255, 57, 0) },
// Row 29
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 28), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 28), color: Color3.FromInts(247, 2, 2) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 28), color: Color3.FromInts(138, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 28), color: Color3.FromInts(138, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 28), color: Color3.FromInts(138, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 28), color: Color3.FromInts(138, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 28), color: Color3.FromInts(228, 7, 8) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 28), color: Color3.FromInts(0, 0, 0) },
// Row 30
{ position: new Vector3(brickOffsetX + brickSize * 8, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 29), color: Color3.FromInts(255, 30, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 29), color: Color3.FromInts(250, 1, 1) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 29), color: Color3.FromInts(255, 18, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 29), color: Color3.FromInts(127, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 12, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 29), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 29), color: Color3.FromInts(127, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 29), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 29), color: Color3.FromInts(234, 6, 7) },
{ position: new Vector3(brickOffsetX + brickSize * 25, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 29), color: Color3.FromInts(255, 30, 0) },
// Row 31
{ position: new Vector3(brickOffsetX + brickSize * 9, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 30), color: Color3.FromInts(255, 7, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 10, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 30), color: Color3.FromInts(255, 26, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 11, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 30), color: Color3.FromInts(116, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 12, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 30), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 21, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 30), color: Color3.FromInts(0, 0, 0) },
{ position: new Vector3(brickOffsetX + brickSize * 22, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 30), color: Color3.FromInts(116, 39, 45) },
{ position: new Vector3(brickOffsetX + brickSize * 23, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 30), color: Color3.FromInts(146, 29, 34) },
{ position: new Vector3(brickOffsetX + brickSize * 24, GameManager.PLANE_HEIGHT, brickOffsetZ - brickSize * 30), color: Color3.FromInts(255, 7, 0) },
